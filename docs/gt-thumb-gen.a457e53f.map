{"version":3,"sources":["youtube-video.ts","index.ts"],"names":[],"mappings":"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","file":"gt-thumb-gen.a457e53f.map","sourceRoot":"..","sourcesContent":["export class YoutubeVideo{\r\n    public static getVideoInfo(id){\r\n        return fetch(\"https://www.youtube.com/get_video_info?video_id=\"+id, {\"credentials\":\"omit\",\"headers\":{},\"referrer\":\"http://localhost:8000/test.html\",\"referrerPolicy\":\"no-referrer-when-downgrade\",\"body\":null,\"method\":\"GET\",\"mode\":\"cors\"})\r\n        .then(response => {\r\n            if(!response.ok ){\r\n                throw new Error(\"Unable to complete request\");\r\n            }\r\n            return response.text();\r\n        }).then(video_info =>{\r\n            var video;\r\n            video = this.decodeQueryString(video_info);\r\n            if (video.status === \"fail\") {\r\n             return video;\r\n            }\r\n            video.sources = this.decodeStreamMap(video.url_encoded_fmt_stream_map);\r\n            video.getSource = function(type, quality) {\r\n            var exact, key, lowest, source, _ref;\r\n            lowest = null;\r\n            exact = null;\r\n            _ref = this.sources;\r\n            for (key in _ref) {\r\n                source = _ref[key];\r\n                if (source.type.match(type)) {\r\n                if (source.quality.match(quality)) {\r\n                    exact = source;\r\n                } else {\r\n                    lowest = source;\r\n                }\r\n                }\r\n            }\r\n            return exact || lowest;\r\n            };\r\n            return video;\r\n        });\r\n\r\n    }\r\n\r\n    private static decodeQueryString(queryString:string) {\r\n      var key, keyValPair, keyValPairs, r, val, _i, _len;\r\n      r = {};\r\n      keyValPairs = queryString.split(\"&\");\r\n      for (_i = 0, _len = keyValPairs.length; _i < _len; _i++) {\r\n        keyValPair = keyValPairs[_i];\r\n        key = decodeURIComponent(keyValPair.split(\"=\")[0]);\r\n        val = decodeURIComponent(keyValPair.split(\"=\")[1] || \"\");\r\n        r[key] = val;\r\n      }\r\n      return r;\r\n    }\r\n\r\n    private static decodeStreamMap(url_encoded_fmt_stream_map) {\r\n      var quality, sources, stream, type, urlEncodedStream, _i, _len, _ref;\r\n      sources = {};\r\n      _ref = url_encoded_fmt_stream_map.split(\",\");\r\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\r\n        urlEncodedStream = _ref[_i];\r\n        stream = this.decodeQueryString(urlEncodedStream);\r\n        type = stream.type.split(\";\")[0];\r\n        quality = stream.quality.split(\",\")[0];\r\n        stream.original_url = stream.url;\r\n        stream.url = \"\" + stream.url + \"&signature=\" + stream.sig;\r\n        sources[\"\" + type + \" \" + quality] = stream;\r\n      }\r\n      return sources;\r\n    }\r\n\r\n    public static parseYoutubeUrl(url:string){\r\n        let res = /https:\\/\\/youtu\\.be\\/([^\\?]*)(\\?t=)?(.*)?/.exec(url);\r\n        let id=undefined;\r\n        let timeString = undefined;\r\n        if(res){\r\n            id = res[1];\r\n            timeString = res[3];\r\n        } else {\r\n            res = /https:\\/\\/www\\.youtube\\.com\\/watch\\?v=([^&]*)(&t=)?(.*)/.exec(url);\r\n            if(res){\r\n                id=res[1];\r\n                timeString = res[3];\r\n            } else {\r\n                throw new Error('Invalid Youtube url specified');\r\n            }\r\n        }\r\n        return {id, seconds: this.timestringToSeconds(timeString)};\r\n    }\r\n\r\n    private static timestringToSeconds(timeString){\r\n        if(!timeString){\r\n         return 0;\r\n        }\r\n\r\n        var hours = timeString.match(/(\\d)+h/); \r\n        var minutes = timeString.match(/(\\d)+m/);\r\n        var seconds = timeString.match(/(\\d)+s/);\r\n    \r\n        var totalTimeInSeconds = 0;\r\n        \r\n        if (hours) {\r\n        hours = hours[0].replace(\"h\",\"\");\r\n        totalTimeInSeconds += hours * 60 * 60;\r\n        }\r\n        \r\n        if (minutes) {\r\n            minutes = minutes[0].replace(\"m\",\"\");\r\n            totalTimeInSeconds += minutes * 60;\r\n        }\r\n        \r\n        if (seconds) {\r\n        seconds = seconds[0].replace(\"s\",\"\")\r\n        totalTimeInSeconds += seconds * 1;\r\n        }\r\n        return totalTimeInSeconds;\r\n    }\r\n  }","let canvas = document.getElementById('canvas') as HTMLCanvasElement;\r\n\r\nimport imgPath from './images/gamingTrendLogo.png';\r\nimport backgroundImagePath from './images/background.png';\r\nimport {YoutubeVideo} from './youtube-video';\r\n\r\nvar urls = ['https://youtu.be/X_Ch70KkMtE?t=2m57s', 'https://youtu.be/X_Ch70KkMtE', 'https://www.youtube.com/watch?v=X_Ch70KkMtE', 'https://www.youtube.com/watch?v=X_Ch70KkMtE&t=2m57s'];\r\nurls.forEach(u => console.log(u, YoutubeVideo.parseYoutubeUrl(u)));\r\n\r\n\r\nlet description = 'Holly Saves Time' //'Naval Combat and Recruiting';\r\nlet subText = \"Wow this is awesome, I can't believe it\"//\"Assasin's Creed Odyssey - PC - 4K Max Settings\";\r\n\r\nasync function getVideoUrl(videoId ) {\r\n    return YoutubeVideo.getVideoInfo(videoId)\r\n    .then((video) => {\r\n        console.log('video', video);\r\n        console.log('hd stream', video.getSource('mp4', 'hd720'));\r\n        let videoSource = video.getSource('mp4', 'hd720');\r\n        let videoUrl = videoSource.url;\r\n        if(!videoUrl){\r\n            throw new Error('Unable to attain video url');\r\n        }\r\n        return videoUrl;\r\n    })\r\n    .catch(error => console.log('Error', error));\r\n}\r\n\r\nasync function getVideoFrame(videoId, seektime?: number){\r\n    let url = await getVideoUrl(videoId);\r\n    let extractor = new VideoFrameExtractor(url);\r\n    if(seektime){\r\n        await extractor.seek(seektime);\r\n    }\r\n    return extractor.getFrame();\r\n}\r\n\r\nclass VideoFrameExtractor{\r\n    private backgroundVideo: HTMLVideoElement;\r\n    private loadedPromise: Promise<void>;\r\n    private loadedResolve;\r\n    private loadedReject;\r\n\r\n    private seekedPromise: Promise<void> = this.seekedPromise = new Promise(resolve => resolve());;\r\n    private seekedResolve = () => {};\r\n    private seekedReject = (reason?:any) => {};\r\n\r\n    constructor(public url:string) {\r\n        this.loadedPromise = new Promise((resolve, reject) =>{\r\n            this.loadedResolve = resolve;\r\n            this.loadedReject = reject;\r\n        });\r\n        \r\n        this.backgroundVideo = document.createElement('video');\r\n        this.backgroundVideo.crossOrigin = 'anonymous';\r\n        this.backgroundVideo.addEventListener('loadeddata', (ev) => this.loadedResolve(), false);\r\n        this.backgroundVideo.addEventListener('seeked',(ev) => this.seekedResolve(), false);\r\n        this.backgroundVideo.addEventListener('error', (ev) => {\r\n            this.loadedReject(ev.error);\r\n            this.seekedReject(ev.error);\r\n        }, false);\r\n        \r\n        this.backgroundVideo.preload = 'auto';\r\n        this.backgroundVideo.src = url;        \r\n    }\r\n\r\n    public async seek(seconds){\r\n        await this.loadedPromise;\r\n        this.seekedPromise = new Promise((resolve, reject) =>{\r\n            this.seekedResolve = resolve;\r\n            this.seekedReject = reject;\r\n        });\r\n        this.backgroundVideo.currentTime = seconds;\r\n        return this.seekedPromise;\r\n    }\r\n\r\n     public async getFrame(){\r\n        await this.loadedPromise;\r\n\r\n        let c = document.createElement('canvas');\r\n        var ctx = c.getContext('2d');\r\n        c.width = this.backgroundVideo.videoWidth;\r\n        c.height = this.backgroundVideo.videoHeight;\r\n        ctx.drawImage(this.backgroundVideo, 0, 0, c.width, c.height);\r\n        return c.toDataURL();\r\n    }\r\n}\r\n\r\n// getVideoFrame('-0xQag7xSKk', 30 )//(10 * 60) + 7)\r\n// .then((dataUrl) => {\r\n//     (document.getElementById('sample') as HTMLImageElement).setAttribute('src', dataUrl);\r\n//     });\r\n\r\nwindow.devicePixelRatio = 1;\r\nconsole.log(imgPath);\r\n\r\nlet gamingTrendLogo = convertURIToImageData(imgPath);\r\n\r\nfunction draw(input: ThumbnailGenInput){\r\nconsole.log('draw called', input);\r\n\r\nlet ctx = canvas.getContext('2d');\r\nctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\nctx.drawImage(input.backgroundImage,0,0);\r\n\r\ndrawOverlay(ctx);\r\n\r\n    if(input.description){\r\n        drawDescription(ctx, input.description);\r\n    }\r\n    if(input.subText) {\r\n        drawSubText(ctx, input.subText);\r\n    }\r\n    gamingTrendLogo.then(gtImage => canvas.getContext(\"2d\").drawImage(gtImage, 20, 590));\r\n};\r\n\r\n// var backgroundImage = new Image;\r\n// backgroundImage.addEventListener(\"load\", function () {\r\n//     draw({backgroundImage, description, subText});\r\n// });\r\n// backgroundImage.setAttribute('src', backgroundImagePath);\r\n\r\ndocument.getElementById('redraw').onclick = () => {\r\n    var desc = (document.getElementById('description') as HTMLInputElement ).value || description;\r\n    var sub = (document.getElementById('subtext') as HTMLInputElement ).value || subText;\r\n    var youtubeUrl = (document.getElementById('youtubeurl') as HTMLInputElement).value || undefined;\r\n    if(youtubeUrl){\r\n        let youtubeInfo = YoutubeVideo.parseYoutubeUrl(youtubeUrl);\r\n        getVideoFrame(youtubeInfo.id, youtubeInfo.seconds)\r\n        .then(convertURIToImageData)\r\n        .then(backgroundImage => draw({description:desc, subText:sub, backgroundImage}));\r\n    } else {\r\n        draw({description:desc, subText: sub});\r\n    }\r\n};\r\n// draw(backgroundImage);\r\n\r\nfunction drawOverlay(ctx: CanvasRenderingContext2D){\r\n    var gradient = ctx.createLinearGradient(0,530,0,720);\r\ngradient.addColorStop(0,\"rgba(0,0,0,0)\");\r\ngradient.addColorStop(1,\"rgba(0,0,0,255)\");\r\nctx.fillStyle = gradient;\r\n// ctx.fillRect(0,0,200,100);\r\nctx.fillRect(0, 530, 1280,190);\r\n    // var top = 720-190;\r\n    // var gradient = ctx.createLinearGradient(0,0,0,100);\r\n    // // gradient.addColorStop(0,\"rgba(255,255,255,0)\");\r\n    // gradient.addColorStop(0, 'white');\r\n    // gradient.addColorStop(1,\"rgba(0,0,0,255)\");\r\n    // ctx.fillStyle = gradient;\r\n    // ctx.fillRect(0,530, 1280,190);\r\n}\r\n\r\nfunction drawDescription(ctx, description){\r\n    \r\n    ctx.shadowColor = 'black';\r\n    ctx.shadowBlur = 0;\r\n    ctx.shadowOffsetX = 0;\r\n    ctx.shadowOffsetY = 0;\r\n    let oldLetterSpacing = canvas.style.letterSpacing;\r\n    canvas.style.letterSpacing = \"0.7px\";\r\n\r\n    ctx.fillStyle = '#37c5ff';\r\n    ctx.font = \"bold 50pt 'Exo 2', sans-serif\";\r\n    ctx.fillText(description, 150, 642);\r\n\r\n    canvas.style.letterSpacing = oldLetterSpacing;    \r\n}\r\n\r\nfunction drawSubText(ctx, desc){\r\n    let oldLetterSpacing = canvas.style.letterSpacing;\r\n    canvas.style.letterSpacing = \"1.35px\";\r\n\r\n    ctx.fillStyle = '#d4d4d4';\r\n    ctx.font = \"bold 26pt 'Exo 2', sans-serif\";\r\n    // ctx.fillText(desc, 154, 686);\r\n    ctx.fillText(desc, 154, 680);\r\n\r\n    canvas.style.letterSpacing = oldLetterSpacing;  \r\n}\r\n\r\nasync function convertURIToImageData(URI) {\r\n    return new Promise<HTMLImageElement>(function(resolve, reject) {\r\n      if (URI == null) return reject();    \r\n          var image = new Image();\r\n      image.addEventListener('load', function() {   \r\n        resolve(image);\r\n      }, false);\r\n      image.setAttribute('src', URI);\r\n    });\r\n  }\r\n\r\ninterface ThumbnailGenInput{\r\n    backgroundImage?: HTMLCanvasElement | HTMLVideoElement | HTMLImageElement | ImageBitmap;\r\n    description?: string;\r\n    subText?: string;\r\n}"]}